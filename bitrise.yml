format_version: 1.1.0
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - RELEASE_VERSION: 1.14.1

  # define these in your .bitrise.secrets.yml
  - PROJECT_WORKDIR: $PROJECT_WORKDIR
  - BITRISE_PROJECT_PATH: $BITRISE_PROJECT_PATH
  - BITRISE_SCHEME: $BITRISE_SCHEME

workflows:
  # ----------------------------------------------------------------
  # --- workflow to Step Test
  test:
    steps:
    - script:
        title: "Go Test"
        inputs:
        - content: go test ./...
    - script:
        title: Step audit
        inputs:
        - content: stepman audit --step-yml=./step.yml
    - script:
        title: Switch working dir to PROJECT_WORKDIR
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file', which would work for local tests
          but not if the step is included in another bitrise.yml!
        inputs:
        - content: envman add --key BITRISE_SOURCE_DIR --value "${PROJECT_WORKDIR}"
    - path::./:
        inputs:
        - output_tool: xcpretty
        # - output_tool: xcodebuild
        # - is_clean_build: "no"
        - is_clean_build: "yes"
        - generate_code_coverage_files: "no"
        # - generate_code_coverage_files: "yes"
        - simulator_device: iPhone 6
        # - simulator_device: Apple TV 1080p
        # - simulator_platform: tvOS Simulator
        - should_build_before_test: "yes"
        - xcodebuild_test_options: -verbose
    - script:
        title: Output test
        is_always_run: true
        inputs:
        - content: |-
            echo "BITRISE_XCODE_TEST_RESULT: ${BITRISE_XCODE_TEST_RESULT}"
            if [ ! -f "$BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH" ] ; then
              echo "No BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH file generated!"
              exit 1
            fi
            echo "BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH: ${BITRISE_XCODE_RAW_TEST_RESULT_TEXT_PATH}"
            echo "BITRISE_XCODE_TEST_ATTACHMENTS_PATH: ${BITRISE_XCODE_TEST_ATTACHMENTS_PATH}"

  # ----------------------------------------------------------------
  # --- workflows to create Release
  create-release:
    envs:
    steps:
    - script:
        title:
        inputs:
        - content: |
            #!/bin/bash
            set -ex
            go get -u github.com/bitrise-tools/releaseman
            export CI=true
            releaseman create --version $RELEASE_VERSION

  # ----------------------------------------------------------------
  # --- workflow to Share this step into a Step Library
  share-this-step:
    envs:
      # if you want to share this step into a StepLib
      - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
      - STEP_ID_IN_STEPLIB: xcode-test
      - STEP_GIT_VERION_TAG_TO_SHARE: $RELEASE_VERSION
      - STEP_GIT_CLONE_URL: https://github.com/bitrise-io/steps-xcode-test.git
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share

      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!

      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.

      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!

      To share this Step into a StepLib you can just run: $ bitrise run share-this-step

      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    steps:
    - ensure-clean-git:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            set -x

            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}

            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}

            bitrise share finish
