// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	xcodeversion "github.com/bitrise-steplib/steps-xcode-test/xcodeversion"
	mock "github.com/stretchr/testify/mock"
)

// XcodeVersionReader is an autogenerated mock type for the Reader type
type XcodeVersionReader struct {
	mock.Mock
}

// Version provides a mock function with given fields:
func (_m *XcodeVersionReader) Version() (xcodeversion.Version, error) {
	ret := _m.Called()

	var r0 xcodeversion.Version
	if rf, ok := ret.Get(0).(func() xcodeversion.Version); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(xcodeversion.Version)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewXcodeVersionReader interface {
	mock.TestingT
	Cleanup(func())
}

// NewXcodeVersionReader creates a new instance of XcodeVersionReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewXcodeVersionReader(t mockConstructorTestingTNewXcodeVersionReader) *XcodeVersionReader {
	mock := &XcodeVersionReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
